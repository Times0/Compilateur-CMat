// Restrictions :
//                  - Pas ff[a[0]]
//                  - Pas de parametres/matrice
//                  - Pas de retour matrices/tableaux mais A[0]
//                  - Pas de recursvite

/*int a;
float d; // b banni car opcode de branch
int e;

a=1;
e=0;
a=2||2;
print(a);
print(1);
printf("\n");*/

/*int mult(int x, int y)
{
    // print(x);
    // print(y);
    return x * y;
}*/

float fact(int a, int y)
{
    // int a = 1+1+1+1+1+1+1+1+1+1;
    // return a;
    // print(A[]);
    // printmat(A);
    // if (val < 2)
    // {
    // return A[0];
    // }
    // else
    // {
        // return fact(val - 1);
        // fact(val - 1);
    // }
    return a*y;
    /*else
    {
        return val;
    }*/
}
// 18


int main()
{
    // matrix A[3] = {1, 0, 33};
    // float j = fact(A[1]);
    // fact(A[1]);
    // int a = A[A[0]];
    // fact(0.0);
    // print(r[2]);
    // float aa = fact(A[1]);
    // print(aa); 
    int a = fact(5,3);

    // if(A[1])
    // {
        print(a);
    // }

    
    // printmat(A);
    // int j=mult(2, 3);
    // print(j);
    return 1;
}
/*int re(int a, int b)
{
    /*print(a);
    printf("\n");
    print(b);
    printf("\n");
    /*print(a*b);
    printf("\n");
    
    // re(a, 0);
    return a*b;
}

int main()
{
    int a=5.1;
    int b=3;
    // a+b+1;
    // matrix A[3]={11, 21, 31};
    
    int c = re(a, 2);
    print(c);
    // print(a);
    // printf("\n");
    // print(b);
    // int a=1;
    // int b=1;
}*/
    /*int a;
    matrix A[1];
    if(1)
    {
        if(2)
        {
            int b;
            re(1, b);
            // printmat(A);
        }
    }
    int c;
}
int g;




    /*for (int i = 0; i < 10; i++)
    {
        printf("Hello, world!\n");
    }

    int i;
    for(i = 0; i < 10; i++)
    {
        print(i);
    }*/

    /*matrix A[3][3]= {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};
    matrix B[2][2] = A[0..1][1..2];
    printmat(B);*/

    /*matrix A[3];
    A[0] = 1+2;
    A[1] = 2;
    A[2] = 3;
    printmat(A);*/

    // matrix B[3] = {1, 2, 3}, C[3];
    // printmat(B);
    
    // matrix f[3][3];
    /*f[0][0] = 1;
    f[0][1] = 2;
    f[0][2] = 3;
    f[1][0] = 4;
    f[1][1] = 5;
    f[1][2] = 6;
    f[2][0] = 7;
    f[2][1] = 8;
    f[2][2] = 9;
    
    printmat(f);*/
    /*int a[2];
    a[0] = 3;
    a[1] = 0;

    matrix ff[5];
    ff[0] = -12.1+27;
    ff[1] = ff[0]*8.9;
    ff[2] = 1;
    ff[3] = ff[1]+1;
    ff[4] = ff[2]*ff[0];
    ff[a[0]] = 97;
    printf("Matrice ff\n");
    printmat(ff);*/

    // matrix A[3];
    // A[0] = 1;
    // A[0][1] = 5;
    // A[0][2] = 10.1;
    // A[1] = 2;
    // A[1][1] = 6;
    // A[1][2] = 11.23;
    // A[2] = 3;
    // A[2][1] = 7;
    // A[2][2] = 12;
    // matrix B[1];
    // B[0] = 4;
    // B[1][1] = 5;
    // B[2][2] = 6;

    // A[0] = A[0]+3.33;
    // A = -A*2+4;
    // B = A*~A;
    // B = B+B;
    // A = A-A+A;
    // B = A*~A;
    // matrix C[1][1];
    // C[0][0] = 1;
    // C = ~A*A;
    // float b;
    // b = C[0][0];
    // print(b);
    // B[0] = 8;
    // int d;
    // d = B[0];
    // d = ~A*A;
    // printmat(B);
    // print(d);
    // printf("\n");
    // A=-A;
    // A--;
    
    // printmat(C);
    // printmat(A);
    // print(d);
    // printmat(B);

/*    matrix X[3];
    X[0] = 2;
    X[1] = 8;
    X[2] = 7;

    matrix Y[1][3];
    // Y[0][0] = 1;
    // Y[0][1] = 2;
    // Y[0][2] = 3;

    Y = ~X;
    
    printmat(X);
    printmat(Y);

    // int a=0;
    // float d = 9.1;
    // a = -d;
    // print(a);

    // print(d);
    // printf("\n");
    // print(c+a);

    /*int c[3];
    c[0] = 1;
    print(c[0]);
    c[1] = 3*9;
    print(c[1]);
    c[2] = (c[0]+1)*c[1];
    print(c[2]);*/

    // matrix C = A+B;

    // ff[1..3;5];

    /*int tt=0;
    tt=-tt;
    printmat(ff);
    
    tt = -(2+3);
    print(tt);
    
    while(a < 3)
    {
        print(ff[2]);
        a++;
    }*/
    

    /*int a[3];
    float b =9.66;
    print(c);
    a[0] = 999+b;
    print(a[0]);*/

    // a = ff[2] + ff[3];
    // print(r);
    /*print(ff[3]);
    print(ff[2]);
    printf("\n");
    printmat(ff);*/
    // ff[0] = ff[1]+ff[2];*/

    // c = 2*f[3][3*c];
    // print(1+2*9+4*2+7);

    /*for(int i=0;i<5 && i<7;i++*2)
    {
        print(i);
        printf("\n");
    }
    c=0;
    while(c < 5)
    {
        // print(c);
        // printf("\n");
        c++;
        int k;
    }

    if(0.9 >= 1)
    {
        printf(">");
    }
    else if(2 > 1)
    {
        printf(">");
    }
    else
    {
        printf("=");
    }
    int t;
    t=1;
    if(2 <= 1)
    {
        printf("<=");
    }
    if(2 > 1)
    {
        printf(">");
    }
    if(2 >= 1)
    {
        printf(">=");
    }
    if(2 == 2)
    {
        printf("==");
    }
    if(r || c)
    {
        printf("||");
    }
    // if((1!=1 && 1 < 2) || (2!=2))
    if((1!=1 || 1 > 2)&&r)
    {
        printf("!=");
    }
    int t;
    t=1;*/

    /*int a;
    int c;
    int r;
    a=2;
    c=0;
    r=2;

    if(a)
    {
        int t;
        if((r && c) || c)
        {
            if(r)
            {
                print(5);
                print(5);
            }
            print(3);
            print(3);
            t = 9;
        }
        if(r)
        {
            print(4);
            print(4);
        }
        print(1);
        print(1);
        // print(t);
        print(r);
    }
    printf("\n");
    print(a);
    printf("\n");
    print(c);
    printf("\n");
    print(r);
    printf("\n");*/

    /*float d;
    int a;
    a=a+2;
    printf("Test des opérations arithmétiques sur int\n");
    print(a);
    printf("\n");
    a = 1;
    print(a);
    printf("\n");

    a = -a;
    print(a);
    printf("\n");

    a = 1 - 2.5;
    print(a);
    printf("\n");

    a = 1 + 2.5;
    print(a);
    printf("\n");

    a = 3*5;
    print(a);
    printf("\n");

    a = 24/6;
    print(a);
    printf("\n");

    a = 26%6;
    print(a);
    printf("\n");

    printf("Test des opérations arithmétiques sur float\n");

    d = 1.9;
    print(d);
    printf("\n");

    d = -2.5;
    print(d);
    printf("\n");

    d = 1.9 - 2.5;
    print(d);
    printf("\n");

    d = 1.9 + 2.5;
    print(d);
    printf("\n");

    d = 3.5*5.5;
    print(d);
    printf("\n");

    d = 24.5/6.5;
    print(d);
    printf("\n");

    d = 26%6;
    print(d);
    printf("\n");

    printf("Test des opérations arithmétiques sur int et float\n");

    d = 1;
    print(d);
    printf("\n");

    a = 1.9;
    print(a);
    printf("\n");

    d = 1 + 2.5;
    print(d);
    printf("\n");

    d = 2*2.5;
    print(d);
    printf("\n");

    d = 2.5/2;
    print(d);
    printf("\n");

    d =1.5;
    d++;
    print(d);
    printf("\n");

    d=1.5;
    ++d;
    print(d);
    printf("\n");

    printf("Fin des tests\n");
}

/*{
    float a;
    int d;
    a = 6.9;
    print(a);
}


{
    {
        // float a;
        // int d;
        // a = 6.9;
        // print(a);
        // printf("\n");
    }
    float e;
}

{
    {
        float a;
    }
}

{

}
a=8;
{
    float r;
    {
        int r;
        {
            r = 9;
            a = 9;
        }
        print(r);
        printf("\n");
    }
    print(r);
}
printf("\n");
print(a);

a = 3;
a = 4;

// affectation OK
// minus unary OK
// minus binary OK
// plus binary OK
// multiple variable declaration OK

// float affectation OK
// minus unary OK
// minus binary OK
// plus binary OK
// multiple variable declaration OK

// float = int OK
// int = float NOT OK
// addition float + int OK
// soustraction float - int OK */